apply plugin: 'com.android.application'
apply plugin: 'com.mob.sdk'

def getProductName() {
    return "TravelApp"
}
//获取当前系统的时间
def releaseTime() {
    return new Date().format("yyyyMMddhh", TimeZone.getTimeZone("UTC"))
}

android {
    dexOptions {
        javaMaxHeapSize "4g"
    }
    signingConfigs {
        config {
            keyAlias 'travel'
            keyPassword '123456'
            storeFile file('F:/myGithubApps/Travel/appkey/travel.jks')
            storePassword '123456'
        }
    }
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.jcool.dev.travel"
        minSdkVersion 16
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        flavorDimensions "versionCode"
        multiDexEnabled true
        ndk {
            //设置支持的SO库架构（开发者可以根据需要，选择一个或多个平台的so）
            abiFilters "armeabi", "armeabi-v7a", "arm64-v8a", "x86", "x86_64"
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
        debug {
            signingConfig signingConfigs.config
        }
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
    // 多渠道
    productFlavors {
        xiaomi {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "xiaomi"]
        }
        huawei {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "huawei"]
        }
        yy360 {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "yy360"]
        }
        anzhi {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "anzhi"]
        }
        qq {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "qq"]
        }
        baidu {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "baidu"]
        }
        wandoujia {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "wandoujia"]
        }
        oppo {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "oppo"]
        }
        sogou {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "sogou"]
        }
        wo {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "wo"]
        }
        yingyonghui {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "yingyonghui"]
        }
        jifeng {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "jifeng"]
        }
        mumayi {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "mumayi"]
        }
        chuizi {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "chuizi"]
        }
        nduo {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "nduo"]
        }
        zhougang {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "zhougang"]
        }
    }

    // 多渠道批量替换
    productFlavors.all { flavor ->
        //批量修改Manifest占位符替换
        //在Manifest使用`${UMENG_CHANNEL_VALUE}`,`LEANCLOUD_CHANNEL_VALUE`,打包时将替换成渠道名，例如UMENG_CHANNEL_VALUE="anzhi";
        flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name, LEANCLOUD_CHANNEL_VALUE: name]
        //        flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]
        if (project.hasProperty('_myAPPBuildVersionName')) {
            defaultConfig.versionName = _myAPPBuildVersionName
        }
    }
    // 批量打包
    applicationVariants.all { variant ->
        variant.outputs.all { output ->  // each 改为 all
            def fileName
            if (variant.buildType.name.equals("release")) {
                fileName = getProductName() + "_v${variant.versionName}" + "_" + "${releaseTime()}" + "_release.apk"
            } else {
                fileName = getProductName() + "_v${variant.versionName}" + "_" + "${releaseTime()}" + "debug.apk"
            }
            def outFile = output.outputFile
            if (outFile != null && outFile.name.endsWith('.apk')) {
                outputFileName = fileName  //  output.outputFile 改为 outputFileName
            }
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    final SUPPORT_LIBRARY_VERSION = '28.0.0'
    implementation "com.android.support:appcompat-v7:$SUPPORT_LIBRARY_VERSION"
    implementation "com.android.support:design:$SUPPORT_LIBRARY_VERSION"
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation "com.android.support:support-vector-drawable:$SUPPORT_LIBRARY_VERSION"
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    //分包机制
    implementation 'com.android.support:multidex:1.0.3'
    implementation 'com.google.code.gson:gson:2.8.5'
    // 图片加载
    implementation 'com.github.bumptech.glide:glide:3.7.0'
    implementation 'jp.wasabeef:glide-transformations:2.0.2'
    implementation 'com.loopj.android:android-async-http:1.4.9'
    // 智能刷新
    implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.0.3'
    implementation 'com.zhy:flowlayout-lib:1.0.3'
    //最新版本
    implementation 'com.github.jdsjlzx:LRecyclerView:1.4.3'
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.34'
    implementation 'me.yokeyword:indexablerecyclerview:1.3.0'
    //高德地图
    implementation 'com.amap.api:search:latest.integration'
    implementation 'org.greenrobot:eventbus:3.1.1'
    //搜索
    implementation 'com.amap.api:location:latest.integration'
    //定位
    implementation 'com.amap.api:3dmap:latest.integration'
    //折叠textview
    implementation 'com.ms-square:expandableTextView:0.1.4'
    //支付宝
    implementation(name: 'alipaySdk-15.6.0-20190226104053', ext: 'aar')
    //2D
    //bugly
    implementation 'com.tencent.bugly:crashreport_upgrade:latest.release'
    //微信支付
    compile 'com.tencent.mm.opensdk:wechat-sdk-android-without-mta:+'
    //其中latest.release指代最新Bugly SDK版本号，也可以指定明确的版本号，例如2.1.9
    implementation 'com.tencent.bugly:nativecrashreport:latest.release'
    implementation 'com.yinglan.alphatabs:library:1.0.8'
    implementation 'liji.library.dev:citypickerview:4.2.1'
    //其中latest.release指代最新Bugly NDK版本号，也可以指定明确的版
    implementation project(':calendarview')
    implementation project(':imagepicker')
    implementation project(':flexbox')
}
MobSDK {
    appKey "2aaec8d30608a"
    appSecret "460d5a6ebee7e37b8951fd77e5d895dd"
    ShareSDK {
        devInfo {

            Wechat {
                appId "wxd31e1a84a800e3ae"
                appSecret "47e3afc9b98462983fe753ab6820635a"
                userName "gh_afb25ac019c9"
                path "pages/index/index.html?id=1"
                withShareTicket true
                miniprogramType 2
            }
            QQ {
                appId "101551149"
                appKey "aed9b0303e3ed1e27bae87c33761161d"
            }
            QZone {
                id 3
                sortId 3
                appId "101551149"
                appKey "aed9b0303e3ed1e27bae87c33761161d"
                shareByAppClient true
                bypassApproval false
                enable true
            }
            WechatMoments {
                appId "wxd31e1a84a800e3ae"
                appSecret "47e3afc9b98462983fe753ab6820635a"
            }

        }
    }
}

